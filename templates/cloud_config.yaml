#cloud-config
users:
  - default
  - name: node-exporter
    system: true
    lock_passwd: true
write_files:
  #Prometheus node exporter systemd configuration
  - path: /etc/systemd/system/node-exporter.service
    owner: root:root
    permissions: "0444"
    content: |
      [Unit]
      Description="Prometheus Node Exporter"
      Wants=network-online.target
      After=network-online.target
      StartLimitIntervalSec=0

      [Service]
      User=node-exporter
      Group=node-exporter
      Type=simple
      Restart=always
      RestartSec=1
      ExecStart=/usr/local/bin/node_exporter

      [Install]
      WantedBy=multi-user.target
  #DNS servers containing internal domain names
  - path: /opt/dns-servers
    owner: root:root
    permissions: "0444"
    content: |
      nameserver 127.0.0.53
%{ for ip in nameserver_ips ~}
      nameserver ${ip}
%{ endfor ~}
  #Zeppeling configuration
  - path: /opt/zeppelin-env.sh
    owner: root:root
    permissions: "0444"
    content: |
      export ZEPPELIN_ADDR=0.0.0.0
      export SPARK_HOME=/opt/spark
  #Spark configuration
  - path: /opt/spark-defaults.conf
    owner: root:root
    permissions: "0444"
    content: |
      spark.master 	                                k8s://${k8_api_endpoint}
      spark.kubernetes.container.image 	            ${k8_executor_image}
      spark.kubernetes.authenticate.caCertFile      /opt/k8/ca.crt
      spark.kubernetes.authenticate.clientCertFile  /opt/k8/k8.crt
      spark.kubernetes.authenticate.clientKeyFile   /opt/k8/k8.key
      spark.jars.packages                           org.apache.hadoop:hadoop-aws:3.2.0,com.amazonaws:aws-java-sdk-bundle:1.11.375,io.delta:delta-core_2.12:0.7.0
      SPARK_HOME                                    /opt/spark
      spark.hadoop.fs.s3a.impl                      org.apache.hadoop.fs.s3a.S3AFileSystem
      spark.hadoop.fs.s3a.fast.upload               true
      spark.hadoop.fs.s3a.connection.ssl.enabled    false
      spark.hadoop.fs.s3a.path.style.access         true
      spark.sql.warehouse.dir                       s3a://spark/wharehouse
      spark.hadoop.fs.s3a.access.key                ${s3_access}
      spark.hadoop.fs.s3a.secret.key                ${s3_secret}
      spark.hadoop.fs.s3a.endpoint                  ${s3_endpoint}
      spark.hadoop.hive.metastore.uris              thrift://${hive_metastore_url}
      spark.sql.catalogImplementation               hive
      spark.sql.extensions                          io.delta.sql.DeltaSparkSessionExtension
      spark.sql.catalog.spark_catalog               org.apache.spark.sql.delta.catalog.DeltaCatalog
  #Kubernetes Certificates
  - path: /opt/k8/ca.crt
    owner: root:root
    permissions: "0400"
    content: |
      ${indent(6, k8_ca_certificate)}
  - path: /opt/k8/k8.crt
    owner: root:root
    permissions: "0400"
    content: |
      ${indent(6, k8_client_certificate)}
  - path: /opt/k8/k8.key
    owner: root:root
    permissions: "0400"
    content: |
      ${indent(6, k8_client_private_key)}
  #Zeppelin systemd configuration
  - path: /etc/systemd/system/zeppelin.service
    owner: root:root
    permissions: "0444"
    content: |
      [Unit]
      Description=Apache Zeppelin daemon
      After=syslog.target network.target

      [Service]
      Type=oneshot
      ExecStart=/opt/zeppelin/bin/zeppelin-daemon.sh start
      ExecStop=/opt/zeppelin/bin/zeppelin-daemon.sh stop
      RemainAfterExit=yes

      [Install]
      WantedBy=multi-user.target
packages:
  - curl
  - resolvconf
  - openjdk-8-jre
runcmd:
  #Add DNS Servers
  - systemctl start resolvconf.service
  - systemctl enable resolvconf.service
  - cat /opt/dns-servers >> /etc/resolvconf/resolv.conf.d/head
  - systemctl restart resolvconf.service
  #Install Spark
  - cd /opt
  - wget ${spark_mirror}/apache/spark/spark-3.0.1/spark-3.0.1-bin-hadoop3.2.tgz
  - tar xvzf spark-3.0.1-bin-hadoop3.2.tgz
  - mv spark-3.0.1-bin-hadoop3.2 spark
  - rm spark-3.0.1-bin-hadoop3.2.tgz
  - cp /opt/spark-defaults.conf /opt/spark/conf/spark-defaults.conf
  #Install Zeppelin
  - cd /opt
  - wget ${zeppelin_mirror}/apache/zeppelin/zeppelin-0.9.0-preview2/zeppelin-0.9.0-preview2-bin-netinst.tgz
  - tar xvzf zeppelin-0.9.0-preview2-bin-netinst.tgz
  - mv zeppelin-0.9.0-preview2-bin-netinst zeppelin
  - rm zeppelin-0.9.0-preview2-bin-netinst.tgz
  - cp /opt/zeppelin-env.sh /opt/zeppelin/conf/zeppelin-env.sh
  - systemctl enable zeppelin
  - systemctl start zeppelin